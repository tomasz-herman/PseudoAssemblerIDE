apply=Apply
background=background
brackets=brackets
cancel=Cancel
close=Close
colors=Colors
comment=comment
current.line=current line
data.type=data type
declaration=declaration
editor.color.scheme=Editor color scheme
editor.font=Editor font
editor.font.size=Editor font size
error.quoted=error quoted
font=Font
function=function
function.2=function 2
general=General
gutter=gutter
label=label
number=number
ok=Ok
operator=operator
quoted=quoted
selected.text=selected text
selection=selection
show.icon.row.header=show icon row header
show.line.numbers=show line numbers
terminal.color.scheme=Terminal color scheme
terminal.font=Terminal font
terminal.font.size=Terminal font size
text=text
wrap.lines=wrap lines
new=New
open...=Open...
save=Save
save.as...=Save as...
settings...=Settings...
exit=Exit
undo=Undo
redo=Redo
cut=Cut
copy=Copy
paste=Paste
delete=Delete
select.all=Select all
assemble=Assemble
assemble.and.load=Assemble and load
run=Run
debug=Debug
print.stack=Print stack
print.gpr=Print register
print.fpr=Print fp Register
help...=Help...
license...=License...
about...=About...
file=File
help=Help
edit=Edit
settings=Settings
license=License
about=About
some.program.is.already.running.do.you.wish.to.stop.it=Some program is already running! Do you wish to stop it?
some.program.is.running=Some program is running
choose.color=Choose color
about.text=<h1>Pseudo-Assembler IDE</h1>\
<pre>\
Powered by open-source software\n\
<a href="https://github.com/tomasz-herman/PseudoAssemblerEmulator">Pseudo-Assembler Emulator</a> version: 3.1.6, available under <a href="https://github.com/tomasz-herman/PseudoAssemblerEmulator/blob/master/LICENSE">MIT License</a>\n\
<a href="https://github.com/tomasz-herman/JTerminal">JTerminal</a> version: 0.0.41-alpha, available under <a href="https://github.com/tomasz-herman/JTerminal/blob/master/LICENSE">MIT License</a>\n\
<a href="https://github.com/tomasz-herman/WindowBuilder">WindowBuilder</a> version: 1.0.2, available under <a href="https://github.com/tomasz-herman/WindowBuilder/blob/master/LICENSE">MIT License</a>\n\
<a href="https://github.com/bobbylight/RSyntaxTextArea">RSyntaxTextArea</a> version: 3.1.1, available under <a href="https://github.com/bobbylight/RSyntaxTextArea/blob/master/RSyntaxTextArea/src/main/resources/META-INF/LICENSE">BSD 3-Clause license</a>\n\
<a href="https://github.com/bobbylight/AutoComplete">AutoComplete</a> version: 3.1.0, available under <a href="https://github.com/bobbylight/AutoComplete/blob/master/AutoComplete/src/main/dist/AutoComplete.License.txt">Modified BSD License</a>\n\
<a href="https://github.com/JFormDesigner/FlatLaf">FlatLaf</a> version: 0.40, available under <a href="https://github.com/JFormDesigner/FlatLaf/blob/master/LICENSE">Apache 2.0 License</a>\n\
Sources available on <a href="https://github.com/tomasz-herman/PseudoAssemblerIDE">Github</a>\n\
Copyright (c) 2019-2020 Tomasz Herman, Emil Dragańczuk\n\
</pre>
license.text=<pre">\
Copyright (c) 2019-2020 Tomasz Herman, Emil Dragańczuk\n\
\n\
Permission is hereby granted, free of charge, to any person obtaining a copy\n\
of this software and associated documentation files (the "Software"), to deal\n\
in the Software without restriction, including without limitation the rights\n\
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\
copies of the Software, and to permit persons to whom the Software is\n\
furnished to do so, subject to the following conditions:\n\
\n\
The above copyright notice and this permission notice shall be included in all\n\
copies or substantial portions of the Software.\n\
\n\
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\
SOFTWARE.\
</pre>
help.text=<pre>\
General shortcuts:\n\
        Ctrl + S  - Save\n\
        Ctrl + O  - Open\n\
        Ctrl + N  - New\n\
        Ctrl + F5 - Run\n\
Shift + Ctrl + F5 - Debug\n\
               F5 - Assemble\n\
Shift        + F5 - Assemble and Load\n\
Terminal specific shortcuts:\n\
        Ctrl + C  - Trigger SIGINT\n\
Shift + Ctrl + C  - Copy\n\
Editor specific shortcuts:\n\
        Ctrl + Z  - Undo\n\
        Ctrl + Y  - Redo\n\
        Ctrl + A  - Select all\n\
        Ctrl + C  - Copy\n\
        Ctrl + V  - Paste\n\
        Ctrl + X  - Cut\n\
        Ctrl + Space - Autocompletion\n\
Please refer to the Pseudo-Assembler reference manual for more help: <a href="https://github.com/tomasz-herman/PseudoAssemblerEmulator/raw/master/docs/reference_manual_pl.pdf/">DOWNLOAD</a>\
</pre>
save.changes.before.closing=Save changes before closing?
pusha.short=
fpusha.short=
popa.short=
fpopa.short=
enter.short=
leave.short=
ld.short=
fld.short=
st.short=
fst.short=
lda.short=
out.short=
bout.short=
cout.short=
iout.short=
fout.short=
nop.short=
xchg.short=
fxch.short=
ldb.short=
ldbu.short=
stb.short=
fild.short=
fist.short=
rand.short=
halt.short=
time.short=
in.short=
sleep.short=
push.short=
fpush.short=
pop.short=
fpop.short=
pushf.short=
popf.short=
add.short=Adds two integer numbers
sub.short=
mul.short=
div.short=
idiv.short=
cmp.short=
fadd.short=
fsub.short=
fmul.short=
fdiv.short=
fcmp.short=
neg.short=
inc.short=
dec.short=
fsqrt.short=
fabs.short=
fsin.short=
fcos.short=
ftan.short=
fxam.short=
ftst.short=
and.short=
or.short=
xor.short=
test.short=
not.short=
shr.short=
shl.short=
sar.short=
sal.short=
ror.short=
rol.short=
jmp.short=
je.short=
jz.short=
jne.short=
jnz.short=
jg.short=
jnle.short=
jge.short=
jnl.short=
jl.short=
jnge.short=
jle.short=
jng.short=
ja.short=
jnbe.short=
jae.short=
jnb.short=
jnc.short=
jb.short=
jnae.short=
jc.short=
jbe.short=
jna.short=
jo.short=
jno.short=
js.short=
jns.short=
jp.short=
jnp.short=
loop.short=
call.short=
exit.short=Exits
ret.short=Return from a procedure
dc.short=Declare constant
ds.short=Declare space
float.short=
integer.short=
string.short=
char.short=
byte.short=
pusha.summary=
fpusha.summary=
popa.summary=
fpopa.summary=
enter.summary=
leave.summary=
ld.summary=
fld.summary=
st.summary=
fst.summary=
lda.summary=
out.summary=
bout.summary=
cout.summary=
iout.summary=
fout.summary=
nop.summary=
xchg.summary=
fxch.summary=
ldb.summary=
ldbu.summary=
stb.summary=
fild.summary=
fist.summary=
rand.summary=
halt.summary=
time.summary=
in.summary=
sleep.summary=
push.summary=
fpush.summary=
pop.summary=
fpop.summary=
pushf.summary=
popf.summary=
add.summary=<h1>ADD</h1>\
Dodaje pierwszy argument(wynikowy) do drugiego argumentu(źródłowy) a następnie przechowuje \
wynik w argumencie wynikowym. Wynikowy argument może być wyłącznie rejestrem; źródłowy \
argument może być rejestrem albo miejscem w pamięci.\
</p>\
Instrukcja ADD wykonuje dodawanie całkowitoliczbowe. Wykonuje obliczenia zarówno dla liczb \
całkowitoliczbowych ze znakiem jak i bez znaku i ustawia flagi CF oraz OF żeby zasygnalizować \
przeniesienie (przepełnienie) odpowiednio w znakowym jak i bez znakowym wyniku. Flaga SF \
sygnalizuje znak wyniku.\
<h3>Operacja</h3>\
ARG1 = ARG1 + ARG2;\
<h3>Modyfikowane Flagi</h3>\
Flagi OF, SF, ZF, CF i PF są ustawione w zależności od wyniku.
sub.summary=
mul.summary=
div.summary=
idiv.summary=
cmp.summary=
fadd.summary=
fsub.summary=
fmul.summary=
fdiv.summary=
fcmp.summary=
neg.summary=
inc.summary=
dec.summary=
fsqrt.summary=
fabs.summary=
fsin.summary=
fcos.summary=
ftan.summary=
fxam.summary=
ftst.summary=
and.summary=
or.summary=
xor.summary=
test.summary=
not.summary=
shr.summary=
shl.summary=
sar.summary=
sal.summary=
ror.summary=
rol.summary=
jmp.summary=
je.summary=
jz.summary=
jne.summary=
jnz.summary=
jg.summary=
jnle.summary=
jge.summary=
jnl.summary=
jl.summary=
jnge.summary=
jle.summary=
jng.summary=
ja.summary=
jnbe.summary=
jae.summary=
jnb.summary=
jnc.summary=
jb.summary=
jnae.summary=
jc.summary=
jbe.summary=
jna.summary=
jo.summary=
jno.summary=
js.summary=
jns.summary=
jp.summary=
jnp.summary=
loop.summary=
call.summary=
exit.summary=Finalizes machine's work.
ret.summary=Returns from a procedure.
dc.summary=Declares constant of a given type.
ds.summary=Declares space in memory for a given type.
float.summary=
integer.summary=
string.summary=
char.summary=
byte.summary=
working.directory=Working directory
browse=Browse